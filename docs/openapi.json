{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Efecte Service Management external API documentation.",
    "description" : "API documentation generated by Swagger.",
    "termsOfService" : "",
    "contact" : {
      "email" : "servicedesk@efecte.com"
    },
    "license" : {
      "name" : "",
      "url" : ""
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "/rest-api/itsm/v1"
  } ],
  "tags" : [ {
    "name" : "Test"
  }, {
    "name" : "User"
  }, {
    "name" : "Template"
  }, {
    "name" : "DataCard"
  } ],
  "paths" : {
    "/users/login" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Authenticate user and return a token.",
        "operationId" : "authenticateUser",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "login", "password" ],
                "type" : "object",
                "properties" : {
                  "login" : {
                    "type" : "string",
                    "description" : "ESM local user login"
                  },
                  "password" : {
                    "type" : "string",
                    "description" : "ESM local user password",
                    "format" : "password"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "JWT token returned in response header and body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Wrong credentials provided.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          }
        }
      }
    },
    "/dc/{templateCode}/data" : {
      "get" : {
        "tags" : [ "DataCard" ],
        "summary" : "Get all data cards by template code",
        "description" : "Returns paginated list of data card -information by given template.",
        "operationId" : "getDataForTemplate",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "EQL-filter for data - <a href = \"externaldocumentation/filter.html\">Examples</a>",
          "schema" : {
            "type" : "string"
          },
          "example" : "$updated$ > 'start_week' and $status$ = '02 - In progress'"
        }, {
          "name" : "dataCards",
          "in" : "query",
          "description" : "Whether to get full data cards or simple info-elements",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "selectedAttributes",
          "in" : "query",
          "description" : "Comma-separated list of attributes to be returned. If empty, all are returned",
          "schema" : {
            "type" : "string"
          },
          "example" : "subject, description, status"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Page size limit - minimum 1, maximum 200",
          "required" : true,
          "schema" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "filterId",
          "in" : "query",
          "description" : "Only data cards with id:s lower than filterId will be shown if filterId is not empty or 0",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTPaginatedDataCardsInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "DataCard" ],
        "summary" : "Bulk import data cards",
        "description" : "Import multiple data cards at the same time synchronously",
        "operationId" : "bulkImportDataCards",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/RESTDataCardRequest"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTDataCardListResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to update the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "DataCard" ],
        "summary" : "Create a data card",
        "description" : "Creates a new data card",
        "operationId" : "createNewDataCard",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createEmptyReferences",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCards",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RESTDataCardCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTDataCardResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to update the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}/data/{dataCardId}" : {
      "get" : {
        "tags" : [ "DataCard" ],
        "summary" : "Get data card by id",
        "description" : "Returns the content of a single data card.",
        "operationId" : "getDataCard",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "selectedAttributes",
          "in" : "query",
          "description" : "Comma-separated list of attributes to be returned. If empty, all are returned<br><br><i>Example</i> : subject, description, status",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTDataCard"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "DataCard" ],
        "summary" : "Delete data card by id",
        "description" : "Moves data card to the trash can.",
        "operationId" : "deleteDataCard",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized"
          },
          "403" : {
            "description" : "User is forbidden to delete the resource"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "409" : {
            "description" : "Data card is already in the trashcan"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "DataCard" ],
        "summary" : "Edit a data card",
        "description" : "Edit existing data card",
        "operationId" : "modifyDataCard",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createEmptyReferences",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCards",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RESTDataCardModifyRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTDataCardResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to update the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}/data/{dataCardId}/{attributeCode}" : {
      "get" : {
        "tags" : [ "DataCard" ],
        "summary" : "Get data card attribute  by id",
        "description" : "Returns value of a single data card -attribute.",
        "operationId" : "getDataCardAttributeValue",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTDataCardElement"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "DataCard" ],
        "summary" : "Update attribute from data card",
        "description" : "Update the value of an attribute from given data card.",
        "operationId" : "updateDataCardAttributeValueByPut",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RESTDataCardElementUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to update the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "DataCard" ],
        "summary" : "Add value to an attribute from data card",
        "description" : "Add value to empty or multi value -attribute.",
        "operationId" : "updateDataCardAttributeValueByPost",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RESTDataCardElementUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to update the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "DataCard" ],
        "summary" : "Delete attribute from data card",
        "description" : "Clears the value of an attribute from given data card.",
        "operationId" : "deleteDataCardAttributeValue",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "403" : {
            "description" : "User is forbidden to delete the resource"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}/data/{dataCardId}/{attributeCode}/file/{locationOfExternalReferenceData}" : {
      "get" : {
        "tags" : [ "DataCard" ],
        "summary" : "Download attachment from a data card",
        "description" : "Returns file.",
        "operationId" : "downloadFile",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationOfExternalReferenceData",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "byte"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized"
          },
          "403" : {
            "description" : "No permission to load data card"
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}/data/{dataCardId}/{attributeCode}/file" : {
      "post" : {
        "tags" : [ "DataCard" ],
        "summary" : "Upload attachment to data card",
        "description" : "Returns file upload status message.",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataCardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attributeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MultipartBody"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized"
          },
          "404" : {
            "description" : "Resource not found"
          },
          "413" : {
            "description" : "Uploaded file is too big"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}/data/stream" : {
      "get" : {
        "tags" : [ "DataCard" ],
        "summary" : "Get all data cards by template code",
        "description" : "Returns all available data cards by streaming. For complex and heavy operations streaming results could provide faster and more efficient results than getting paginated data.",
        "operationId" : "getDataStreamForTemplate",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "EQL-filter for data - <a href = \"externaldocumentation/filter.html\">Examples</a>",
          "schema" : {
            "type" : "string"
          },
          "example" : "$updated$ > 'start_week' and $status$ = '02 - In progress'"
        }, {
          "name" : "dataCards",
          "in" : "query",
          "description" : "Whether to get full data cards or simple info-elements",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "selectedAttributes",
          "in" : "query",
          "description" : "Comma-separated list of attributes to be returned. If empty, all are returned",
          "schema" : {
            "type" : "string"
          },
          "example" : "subject, description, status"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTPaginatedDataCardsInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/echo" : {
      "get" : {
        "tags" : [ "Test" ],
        "summary" : "Echo test",
        "description" : "Returns the content of \"message\" query parameter. For testing purposes.",
        "operationId" : "echo",
        "parameters" : [ {
          "name" : "message",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/echo/jwt" : {
      "get" : {
        "tags" : [ "Test" ],
        "summary" : "Echo test for authenticated users",
        "description" : "Returns the content of \"message\" query parameter. For testing purposes.",
        "operationId" : "echoWithJWTToken",
        "parameters" : [ {
          "name" : "message",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized."
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc" : {
      "get" : {
        "tags" : [ "Template" ],
        "summary" : "Get list of all templates",
        "description" : "Returns information about all templates",
        "operationId" : "getAllTemplates",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RESTTemplateInfoElement"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    },
    "/dc/{templateCode}" : {
      "get" : {
        "tags" : [ "Template" ],
        "summary" : "Get template by Template code",
        "description" : "Returns template information.",
        "operationId" : "getTemplate",
        "parameters" : [ {
          "name" : "templateCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RESTTemplateInfo"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiException"
                }
              }
            }
          },
          "401" : {
            "description" : "User is unauthorized."
          },
          "404" : {
            "description" : "Resource not found."
          }
        },
        "security" : [ {
          "JWTAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiResponse" : {
        "title" : "ApiResponse",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 200
          },
          "message" : {
            "type" : "string",
            "example" : "Created"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "token" : {
            "type" : "string",
            "example" : "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
          }
        },
        "description" : "ApiResponse"
      },
      "ApiException" : {
        "title" : "ApiException",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 400,
            "enum" : [ 400, 401, 403, 404, 409 ]
          },
          "message" : {
            "type" : "string",
            "nullable" : true,
            "example" : "Invalid JSON."
          },
          "error" : {
            "type" : "string",
            "example" : "Not Found"
          },
          "url" : {
            "type" : "string",
            "example" : "https://efectecloud.com/efecte/api/vi/dc/incident/datacard/40244"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "RESTDataCardCreateRequest" : {
        "title" : "DataCardCreateRequest",
        "required" : [ "data", "folderCode" ],
        "type" : "object",
        "properties" : {
          "folderCode" : {
            "type" : "string"
          }
        },
        "example" : {
          "folderCode" : "incident_management",
          "data" : {
            "string_attribute_code" : {
              "values" : [ {
                "value" : "String"
              } ]
            },
            "date_attribute_code" : {
              "values" : [ {
                "value" : "2021-03-24"
              } ]
            },
            "datetime_attribute_code" : {
              "values" : [ {
                "value" : "2021-03-24T10:57:57Z"
              } ]
            },
            "decimal_attribute_code" : {
              "values" : [ {
                "value" : 0.2425432341
              } ]
            },
            "number_attribute_code" : {
              "values" : [ {
                "value" : 42
              } ]
            },
            "reference_attribute_code" : {
              "values" : [ {
                "dataCardId" : "21357"
              } ]
            },
            "external_reference_code" : {
              "values" : [ {
                "name" : "https://www.efecte.com",
                "location" : "https://www.efecte.com"
              } ]
            },
            "multi_value_attribute_code" : {
              "values" : [ {
                "value" : "1"
              }, {
                "value" : "2"
              }, {
                "value" : "3"
              } ]
            },
            "static_value_attribute_code" : {
              "values" : [ {
                "value" : "02",
                "code" : "second"
              } ]
            },
            "static_date_attribute_code" : {
              "values" : [ {
                "value" : "02.02.2011"
              } ]
            },
            "worklog_attribute_code" : {
              "values" : [ {
                "value" : "Second comment"
              }, {
                "value" : "First comment"
              } ]
            }
          }
        }
      },
      "RESTDataCardModifyRequest" : {
        "title" : "DataCardModifyRequest",
        "required" : [ "data", "dataCardId" ],
        "type" : "object",
        "properties" : {
          "dataCardId" : {
            "type" : "string"
          },
          "folderCode" : {
            "type" : "string"
          }
        },
        "example" : {
          "folderCode" : "incident_management",
          "dataCardId" : "12345",
          "data" : {
            "string_attribute_code" : {
              "values" : [ {
                "value" : "String"
              } ]
            },
            "date_attribute_code" : {
              "values" : [ {
                "value" : "2021-03-24"
              } ]
            },
            "datetime_attribute_code" : {
              "values" : [ {
                "value" : "2021-03-24T10:57:57Z"
              } ]
            },
            "decimal_attribute_code" : {
              "values" : [ {
                "value" : 0.2425432341
              } ]
            },
            "number_attribute_code" : {
              "values" : [ {
                "value" : 42
              } ]
            },
            "reference_attribute_code" : {
              "values" : [ {
                "dataCardId" : "21357"
              } ]
            },
            "external_reference_code" : {
              "values" : [ {
                "name" : "https://www.efecte.com",
                "location" : "https://www.efecte.com"
              } ]
            },
            "multi_value_attribute_code" : {
              "values" : [ {
                "value" : "1"
              }, {
                "value" : "2"
              }, {
                "value" : "3"
              } ]
            },
            "static_value_attribute_code" : {
              "values" : [ {
                "value" : "02",
                "code" : "second"
              } ]
            },
            "static_date_attribute_code" : {
              "values" : [ {
                "value" : "02.02.2011"
              } ]
            },
            "worklog_attribute_code" : {
              "values" : [ {
                "value" : "Second comment"
              }, {
                "value" : "First comment"
              } ]
            }
          }
        }
      },
      "RESTDataCardRequest" : {
        "title" : "DataCardCreateRequest",
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RESTDataCardModifyRequest"
        }, {
          "$ref" : "#/components/schemas/RESTDataCardCreateRequest"
        } ]
      },
      "ImportResult" : {
        "type" : "object",
        "properties" : {
          "handledDataCards" : {
            "type" : "integer",
            "format" : "int32"
          },
          "savedDataCards" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notSavedDataCards" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RESTDataCardInfoElement" : {
        "title" : "DataCardInfoElement",
        "type" : "object",
        "properties" : {
          "dataCardId" : {
            "type" : "string",
            "example" : "12345"
          },
          "name" : {
            "type" : "string",
            "example" : "Mouse is not working."
          },
          "url" : {
            "type" : "string",
            "example" : "/dc/incident/data/12345"
          }
        }
      },
      "RESTDataCardInfoResponse" : {
        "title" : "DataCardInfoResponse",
        "type" : "object",
        "properties" : {
          "dataCard" : {
            "$ref" : "#/components/schemas/RESTDataCardInfoElement"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTError"
            }
          }
        }
      },
      "RESTDataCardListResponse" : {
        "title" : "DataCardListResponse",
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/RESTMetaData"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTDataCardInfoResponse"
            }
          }
        }
      },
      "RESTError" : {
        "title" : "UpdateError",
        "type" : "object",
        "properties" : {
          "attributeCode" : {
            "type" : "string",
            "example" : "attribute_code"
          },
          "attributeType" : {
            "type" : "string",
            "example" : "static-value"
          },
          "message" : {
            "type" : "string",
            "example" : "Couldn't find static-value with value: att_value and code: att_code from attribute: Static Attribute"
          },
          "error" : {
            "type" : "string",
            "example" : "Bad Request"
          }
        }
      },
      "RESTMetaData" : {
        "title" : "MetaData",
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2021-07-23T12:11:40Z"
          },
          "url" : {
            "type" : "string",
            "example" : "http://localhost:8080/efecte/api/v1/dc/template_code/data"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTError"
            }
          },
          "createdReferences" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CreatedReference"
            }
          },
          "importResult" : {
            "$ref" : "#/components/schemas/ImportResult"
          }
        }
      },
      "CreatedReference" : {
        "title" : "CreatedReference",
        "type" : "object",
        "properties" : {
          "dataCard" : {
            "$ref" : "#/components/schemas/RESTDataCardInfoElement"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTError"
            }
          }
        }
      },
      "RESTDataCardResponse" : {
        "title" : "DataCardResponse",
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/RESTMetaData"
          },
          "dataCard" : {
            "$ref" : "#/components/schemas/RESTPaginatedData"
          }
        }
      },
      "RESTPaginatedData" : {
        "type" : "object",
        "properties" : {
          "dataCardId" : {
            "type" : "string"
          }
        }
      },
      "Attribute" : {
        "title" : "Attribute",
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object",
            "example" : "string | number | date"
          }
        }
      },
      "ExternalReference" : {
        "title" : "ExternalReference",
        "required" : [ "location", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "download" : {
            "type" : "string"
          }
        }
      },
      "RESTDataCard" : {
        "title" : "DataCard",
        "required" : [ "data", "folderCode", "templateCode" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "dataCardId" : {
            "type" : "string"
          },
          "templateName" : {
            "type" : "string"
          },
          "templateCode" : {
            "type" : "string"
          },
          "templateId" : {
            "type" : "string"
          },
          "folderName" : {
            "type" : "string"
          },
          "folderCode" : {
            "type" : "string"
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/RESTDataCardElement"
            }
          },
          "hidden" : {
            "type" : "boolean"
          },
          "deleted" : {
            "type" : "boolean"
          }
        },
        "example" : {
          "name" : "REST-api example",
          "dataCardId" : "378180",
          "templateName" : "REST example model",
          "templateCode" : "rest_example_model",
          "templateId" : "362524",
          "folderName" : "Incident management",
          "folderCode" : "incident_management",
          "data" : {
            "string_attribute_code" : {
              "name" : "String-attribute",
              "type" : "string",
              "values" : [ {
                "value" : "String"
              } ]
            },
            "empty_or_unauthorized_attribute_code" : {
              "name" : "Empty or Unauthorized -attribute",
              "type" : "string",
              "values" : [ ]
            },
            "date_attribute_code" : {
              "name" : "Date-attribute",
              "type" : "date",
              "values" : [ {
                "value" : "2021-03-24"
              } ]
            },
            "datetime_attribute_code" : {
              "name" : "Datetime-attribute",
              "type" : "date",
              "values" : [ {
                "value" : "2021-03-24T10:57:57Z"
              } ]
            },
            "decimal_attribute_code" : {
              "name" : "Decimal number -attribute",
              "type" : "number",
              "values" : [ {
                "value" : 0.2425432341
              } ]
            },
            "number_attribute_code" : {
              "name" : "Number-attribute",
              "type" : "number",
              "values" : [ {
                "value" : 42
              } ]
            },
            "reference_attribute_code" : {
              "name" : "Reference-attribute",
              "type" : "reference",
              "values" : [ {
                "name" : "Disk capacity low",
                "dataCardId" : "21357",
                "templateName" : "Alert",
                "templateCode" : "alert",
                "deleted" : false,
                "hidden" : false
              } ]
            },
            "external_reference_code" : {
              "name" : "External-reference",
              "type" : "external-reference",
              "values" : [ {
                "name" : "https://www.efecte.com",
                "location" : "https://www.efecte.com"
              } ]
            },
            "multi_value_attribute_code" : {
              "name" : "Multi value -attribute",
              "type" : "string",
              "values" : [ {
                "value" : "1"
              }, {
                "value" : "2"
              }, {
                "value" : "3"
              } ]
            },
            "static_value_attribute_code" : {
              "name" : "Static-value",
              "type" : "static-value",
              "values" : [ {
                "value" : "02",
                "code" : "second"
              } ]
            },
            "static_date_attribute_code" : {
              "name" : "Static-date",
              "type" : "static-value",
              "values" : [ {
                "value" : "02.02.2011",
                "code" : null
              } ]
            },
            "worklog_attribute_code" : {
              "name" : "Worklog attribute",
              "type" : "worklog",
              "values" : [ {
                "author" : "Abraham Administrator",
                "value" : "Second comment",
                "date" : "2021-03-24T08:58:55Z"
              }, {
                "author" : "Ulysses User",
                "value" : "First comment",
                "date" : "2021-03-24T08:58:50Z"
              } ]
            }
          },
          "deleted" : false,
          "hidden" : false
        }
      },
      "RESTDataCardElement" : {
        "title" : "DataCardElement",
        "required" : [ "type", "values" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "string", "number", "date", "worklog", "reference", "external-reference", "static-value" ]
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTValueElement"
            }
          }
        },
        "example" : {
          "name" : "Subject",
          "type" : "string",
          "values" : [ {
            "value" : "Critical Microsoft Patch Missing"
          } ]
        }
      },
      "RESTValueElement" : {
        "title" : "ValueElement",
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Attribute"
        }, {
          "$ref" : "#/components/schemas/WorklogComment"
        }, {
          "$ref" : "#/components/schemas/ExternalReference"
        }, {
          "$ref" : "#/components/schemas/Reference"
        }, {
          "$ref" : "#/components/schemas/StaticValue"
        } ]
      },
      "Reference" : {
        "title" : "Reference",
        "required" : [ "dataCardId" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "dataCardId" : {
            "type" : "string"
          },
          "templateName" : {
            "type" : "string"
          },
          "templateCode" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "StaticValue" : {
        "title" : "StaticValue",
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WorklogComment" : {
        "title" : "WorklogComment",
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "MultipartBody" : {
        "required" : [ "fileName", "fileUpload" ],
        "type" : "object",
        "properties" : {
          "fileUpload" : {
            "type" : "string",
            "description" : "The file/mail to upload",
            "format" : "binary"
          },
          "fileName" : {
            "type" : "string",
            "description" : "File name (.msg extension required)"
          }
        }
      },
      "PaginationMetaInfo" : {
        "title" : "PaginationMetaInfo",
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RESTPaginatedDataCardsInfo" : {
        "title" : "PaginatedDataCardsInfo",
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/PaginationMetaInfo"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTPaginatedData"
            }
          }
        },
        "example" : {
          "meta" : {
            "count" : 3,
            "limit" : 3,
            "links" : {
              "next" : "http://efectecloud.com/efecte/api/v1/dc/incident/data?limit=3&filterId=12345"
            }
          },
          "data" : [ {
            "dataCardId" : "34567",
            "name" : "Display is not working.",
            "url" : "/dc/incident/data/34567"
          }, {
            "dataCardId" : "23456",
            "name" : "Keyboard is not working.",
            "url" : "/dc/incident/data/23456"
          }, {
            "dataCardId" : "12345",
            "name" : "Mouse is not working.",
            "url" : "/dc/incident/data/12345"
          } ]
        }
      },
      "RESTDataCardElementUpdateRequest" : {
        "title" : "DataCardElementUpdate",
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTValueElement"
            }
          }
        }
      },
      "RESTTemplateInfoElement" : {
        "title" : "TemplateInfoElement",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "templateCode" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "RESTAttribute" : {
        "title" : "AttributeInfo",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "multiValue" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string"
          },
          "file" : {
            "type" : "boolean"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTStaticValueInfo"
            }
          },
          "target" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RESTFolderInfo" : {
        "title" : "FolderInfo",
        "type" : "object",
        "properties" : {
          "folderName" : {
            "type" : "string"
          },
          "folderCode" : {
            "type" : "string"
          }
        }
      },
      "RESTStaticValueInfo" : {
        "title" : "StaticValueInfo",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "RESTTemplateInfo" : {
        "title" : "TemplateInfo",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "allowedFolders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RESTFolderInfo"
            }
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/RESTAttribute"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "JWTAuth" : {
        "type" : "http",
        "in" : "header",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}